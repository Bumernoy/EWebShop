<?xml version="1.0"?>

<project name="ProjectName" default="buildProject" xmlns="http://nant.sf.net/schemas/nant-0.85.win32.net-1.0.xsd">
	<!--Properties for build process-->
	<!-- BuildDir is the directory where our .NET source resides.Project directory for web application-->
	<property name="BuildDir" value="D:\WebTest\WebTester"/> 
	<!-- target is the directory where we are going to store deployable files.-->
	<property name="target" value="D:\deploy" overwrite="true" />
	<!-- SolutionFileName is the name of your solution file.-->
	<property name="SolutionFileName" value="WebTester.sln"/>
	<!-- BuildNumberPath is path of the xml file where your current build no is specified.-->
	<property name="BuildNumberPath" value="D:\WebTest\WebTester\build.number.xml"/>
	<!-- dotnet is the path of the folder where .NET framework is installed.-->
	<property name="dotnet" value="c:/windows/Microsoft.NET/Framework/v4.0.30319" overwrite="false"/>
	<!-- MSBuildPath is the path for the MSBuild.exe. This file comes along with .NET framework and 
		being stored at the same folder.-->
	<property name="MSBuildPath" value="C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe" />
	<!-- WebDeploymentExePath is the path of the folder where you have installed WebDeployment Project.-->
	<property name="WebDeploymentExePath" value="C:\Program Files\MSBuild\Microsoft\Windows Workflow Foundation\v3.5" />
	<!-- WebProjectFolderName is your project's directory name-->
	<property name="WebProjectFolderName" value="WebTester" />
	<!-- FinalDeployDllName is name which you want to give your final .dll file generated by WebDeployment tool.-->
	<property name="FinalDeployDllName" value="ProjectName" />
	<!-- newReleaseLabel can be used for naming the folder which contains final deployable files or labelling the source in 
		source control.-->
	<property name="newReleaseLabel" value="ProjectName-0-0-0-0"/>
	<!--Major build number-->
	<property name="build.version.major" value="0"/>	
	<!--Minor build number-->
	<property name="build.version.minor" value="0"/>	
	<!--build number-->
	<property name="build.version.build" value="0"/>	
	<!--revision number-->
	<property name="build.version.revision" value="0"/>	
<!--Ending Properties for build process-->

<target name="incrementBuildNumber">
	<style style="incrBuild.xsl" in="${BuildNumberPath}" out="build.number.tmp"/>
	<delete file="${BuildNumberPath}"/>
	<move file="build.number.tmp" tofile="${BuildNumberPath}"/>
	<xmlpeek file="${BuildNumberPath}" xpath="/build/major" property="build.version.major"/>
	<xmlpeek file="${BuildNumberPath}" xpath="/build/minor" property="build.version.minor"/>
	<xmlpeek file="${BuildNumberPath}" xpath="/build/build" property="build.version.build"/>
	<xmlpeek file="${BuildNumberPath}" xpath="/build/release" property="build.version.revision"/>
</target>

<target name="setVersionString" depends="incrementBuildNumber">
	<property name="newReleaseLabel" value="ProjectName-${build.version.major}-${build.version.minor}-${build.version.build}-${build.version.revision}"/>
	<echo message= "${newReleaseLabel}" />
</target>

<target name="setversion" depends="setVersionString" description="Stamp the version info onto assemblyinfo.cs files">
  <foreach item="File" property="filename">
   <in>
    <items basedir="application">
     <include name="**\AssemblyInfo.cs"></include>
    </items>
   </in>
   <do>
    <script language="C#">
     <code><![CDATA[
     public static void ScriptMain(Project project)
     {
      //FileStream file = File.Open(project.Properties["filename"], FileMode.Open, FileAccess.ReadWrite);
      StreamReader reader = new StreamReader(project.Properties["filename"]);
      string contents = reader.ReadToEnd();
      reader.Close();
      string replacement = string.Format(
       "[assembly: AssemblyVersion(\"{0}.{1}.{2}.{3}\")]",
       project.Properties["build.version.major"],
       project.Properties["build.version.minor"],
       project.Properties["build.version.build"],
       project.Properties["build.version.revision"]
      );
      string newText = Regex.Replace(contents, @"\[assembly: AssemblyVersion\("".*""\)\]", replacement);
      StreamWriter writer = new StreamWriter(project.Properties["filename"], false);
      writer.Write(newText);
      writer.Close();
     }
     ]]>
     </code>
    </script>
   </do>
  </foreach>
 </target>

<target name="clean" description="Remove all files from target folder.">
         <delete dir="${target}" />
</target>

<target name="buildProject" depends="setversion">
    <call target="clean" />
	
	<exec program="${MSBuildPath}">
	
		<arg value="${BuildDir}\${SolutionFileName}" />
    <arg line="/p:OutDir=${target}" />
	
</exec>
    <delete>
            <fileset>
               <include name="${target}/*.build" />
               <include name="${target}/*.scc" />
			   
               <include name="${target}/*.sln" />
               <include name="${target}/build.*" />
			   
			</fileset>
    </delete>
	
		<zip zipfile="D:/WebTesterSiteNant.zip">
    <fileset basedir="${target}\_PublishedWebsites">
          <include name="**/*" />
    </fileset>
</zip> 
</target>
 
</project>